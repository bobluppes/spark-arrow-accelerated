plugins {
    id 'scala'
    id "me.champeau.gradle.jmh" version "0.5.0"
}

group 'nl.tudelft.nonnenmacher'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile project(':arrow-processor')

    compile "org.scala-lang:scala-library:" + scalaVersion
    compile "org.scala-lang:scala-reflect:" + scalaVersion
    compile "org.scala-lang:scala-compiler:" + scalaVersion

    compile "org.apache.spark:spark-sql_2.12:$sparkVersion"
    compile "org.apache.spark:spark-catalyst_2.12:$sparkVersion"
    compile "org.apache.spark:spark-core_2.12:$sparkVersion"
    compile "org.apache.spark:spark-mllib_2.12:$sparkVersion"

    //USE JUnit 4 instead because scalatest is not compatible with jUni5
    testCompile 'org.scalatest:scalatest_2.12:3.0.1'
    testImplementation('junit:junit:4.13')
}

def libraryPaths = [file("${project(':arrow-processor-native').buildDir}/lib/main/debug").absolutePath,
                    "/usr/local/lib64",
                    "/usr/local/lib"]
test {
    systemProperty "java.library.path", libraryPaths.join(':')
}

// JMH Configuration
jmh {
    duplicateClassesStrategy = DuplicatesStrategy.EXCLUDE
    zip64 = true //https://github.com/melix/jmh-gradle-plugin/issues/159#issuecomment-623278956
}
jmhJar {
    zip64 = true //https://github.com/melix/jmh-gradle-plugin/issues/159#issuecomment-623278956
}
